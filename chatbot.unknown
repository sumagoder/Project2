from difflib import get_close_matches   # For finding the closest matching string
from typing import Optional    # For type hinting (Optional[str])



# Function to find the best matching question from the knowledge base
def get_best_match(user_question:str, questions: dict) -> Optional[str]: #gets the list of questions
    questions: list[str]=list(questions.keys()) # Extract all known questions from the dictionary
    matches: list= get_close_matches(user_question,questions,n=1,cutoff=0.6)    # Find closest match (similarity > 60%)

    if matches:
        return matches[0] # Return the best match if found

   

# Main chatbot function that handles the conversation loop
def chat_bot(knowledge:dict):
    while True:
        user_input:str=input('You: ').strip().lower()  # Get user input, remove extra spaces, and convert to lowercase
        best_match:str | None = get_best_match(user_input, knowledge)  # Get the closest matching question from the knowledge base


        if best_match:     # If a matching question is found, retrieve and print the answer
             answer = knowledge.get(best_match)
             print(f'Bot:{answer}')

        else:   # If no match is found, display a default message
            print('Bot: I do not understand....')



# Starting point of the program    
if __name__ == '__main__':
    # Dictionary storing known questions and answers (the bot's "brain")
    brain: dict= {'hello': 'Hey there!',
                  'how are you': 'I am good, thanks!',
                  'what time is it': 'Don\'t know, don\'t care...',
                  'bye': 'See you!',
                  'what is your name': 'I am a simple chatbot.',
        'tell me a joke': 'Why did the computer get cold? Because it forgot to close its Windows!'}
    

    # Start the chatbot with the brain
    chat_bot(knowledge=brain)

